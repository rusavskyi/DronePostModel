//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IDroneService")]
public interface IDroneService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDroneService/GetTechInfo", ReplyAction="http://tempuri.org/IDroneService/GetTechInfoResponse")]
    DronePost.SupportClasses.DroneTechInfo GetTechInfo();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDroneService/GetTechInfo", ReplyAction="http://tempuri.org/IDroneService/GetTechInfoResponse")]
    System.Threading.Tasks.Task<DronePost.SupportClasses.DroneTechInfo> GetTechInfoAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDroneService/AddTask", ReplyAction="http://tempuri.org/IDroneService/AddTaskResponse")]
    void AddTask(DronePost.SupportClasses.DroneTask task);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDroneService/AddTask", ReplyAction="http://tempuri.org/IDroneService/AddTaskResponse")]
    System.Threading.Tasks.Task AddTaskAsync(DronePost.SupportClasses.DroneTask task);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDroneService/SetTask", ReplyAction="http://tempuri.org/IDroneService/SetTaskResponse")]
    void SetTask(DronePost.SupportClasses.DroneTask task);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDroneService/SetTask", ReplyAction="http://tempuri.org/IDroneService/SetTaskResponse")]
    System.Threading.Tasks.Task SetTaskAsync(DronePost.SupportClasses.DroneTask task);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDroneService/DoNextTask", ReplyAction="http://tempuri.org/IDroneService/DoNextTaskResponse")]
    void DoNextTask(bool force);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDroneService/DoNextTask", ReplyAction="http://tempuri.org/IDroneService/DoNextTaskResponse")]
    System.Threading.Tasks.Task DoNextTaskAsync(bool force);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDroneService/Start", ReplyAction="http://tempuri.org/IDroneService/StartResponse")]
    bool Start();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDroneService/Start", ReplyAction="http://tempuri.org/IDroneService/StartResponse")]
    System.Threading.Tasks.Task<bool> StartAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDroneService/Stop", ReplyAction="http://tempuri.org/IDroneService/StopResponse")]
    bool Stop();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDroneService/Stop", ReplyAction="http://tempuri.org/IDroneService/StopResponse")]
    System.Threading.Tasks.Task<bool> StopAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IDroneServiceChannel : IDroneService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class DroneServiceClient : System.ServiceModel.ClientBase<IDroneService>, IDroneService
{
    
    public DroneServiceClient()
    {
    }
    
    public DroneServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public DroneServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public DroneServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public DroneServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public DronePost.SupportClasses.DroneTechInfo GetTechInfo()
    {
        return base.Channel.GetTechInfo();
    }
    
    public System.Threading.Tasks.Task<DronePost.SupportClasses.DroneTechInfo> GetTechInfoAsync()
    {
        return base.Channel.GetTechInfoAsync();
    }
    
    public void AddTask(DronePost.SupportClasses.DroneTask task)
    {
        base.Channel.AddTask(task);
    }
    
    public System.Threading.Tasks.Task AddTaskAsync(DronePost.SupportClasses.DroneTask task)
    {
        return base.Channel.AddTaskAsync(task);
    }
    
    public void SetTask(DronePost.SupportClasses.DroneTask task)
    {
        base.Channel.SetTask(task);
    }
    
    public System.Threading.Tasks.Task SetTaskAsync(DronePost.SupportClasses.DroneTask task)
    {
        return base.Channel.SetTaskAsync(task);
    }
    
    public void DoNextTask(bool force)
    {
        base.Channel.DoNextTask(force);
    }
    
    public System.Threading.Tasks.Task DoNextTaskAsync(bool force)
    {
        return base.Channel.DoNextTaskAsync(force);
    }
    
    public bool Start()
    {
        return base.Channel.Start();
    }
    
    public System.Threading.Tasks.Task<bool> StartAsync()
    {
        return base.Channel.StartAsync();
    }
    
    public bool Stop()
    {
        return base.Channel.Stop();
    }
    
    public System.Threading.Tasks.Task<bool> StopAsync()
    {
        return base.Channel.StopAsync();
    }
}
